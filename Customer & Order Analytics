#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 


SELECT * FROM BIT_DB.JanSales;
SELECT * FROM BIT_DB.FebSales;
SELECT * FROM BIT_DB.customers;

--How many orders were placed in January?--
SELECT COUNT(orderID)
FROM BIT_DB.JanSales;

--How many of those orders were for an iPhone?--
SELECT COUNT(orderiD)
FROM BIT_DB.JanSales
WHERE Product="iPhone";


--Select the customer account numbers for all the orders that were placed in February.--

SELECT acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=Feb.orderid;

--Which product was the cheapest one sold in January, and what was the price?--

SELECT distinct product, price
FROM BIT_DB.JanSales
GROUP BY price LIMIT 1

SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT MIN(price) FROM BIT_DB.JanSales)

--What is the total revenue for each product sold in January?--

SELECT product, SUM(quantity)*price AS Revenue
FROM BIT_DB.JanSales
GROUP BY Product

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?--

SELECT Product, SUM(quantity), SUM(quantity)*price AS Revenue
FROM BIT_DB.FebSales
WHERE location= '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?--

SELECT COUNT(cust.acctnum), AVG(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid=cust.order_id
WHERE Feb.quantity>2;

--select date sales of feburary from 02/13/19 00:00 to 02/18/19 00:00--

SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

--what location placed an order on 02/18/19 01:25--

SELECT location
FROM BIT_DB.FebSales
WHERE orderdate= '02/18/19 01:35';


--what was the total orders placed around 02/18/19%--

SELECT SUM(quantity)
FROM BIT_DB.FebSales
WHERE orderdate like '02/18/19%';


--select all orderdates in Feburary sales--

SELECT orderdate 
FROM BIT_DB.FebSales;

--what battery products sold in Feb--

SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

--list the products and the prices ending in .99--

SELECT distinct Product, Price
FROM BIT_DB.FebSales
WHERE Price like '%.99';

--List all the products sold in Los Angeles in February, and include how many of each were sold.--
SELECT product, sum(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%';
GROUP BY product;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE'%New_York%'
GROUP BY location
HAVING count(orderID) >=3;

--How many of each type of headphone were sold in February?
SELECT product, sum(quantity)
FROM BIT_DB.FebSales
WHERE product LIKE '%headphones%'
GROUP BY product;


--What was the average amount spent per account in February?
SELECT avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id

--What was the average quantity of products purchased per account in February?
SELECT  sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid=cust.order_id;

--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, SUM(quantity*price) as revenue 
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY sum(quantity*price) desc
LIMIT 1;

 
